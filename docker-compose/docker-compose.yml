services:
  vault:
    image: panchalravi/vault-server:latest
    container_name: vault
    build:
      context: .
    ports:
      - "8200:8200"
    volumes:
      - ${HOST_PATH}/vault-config:/etc/vault.d/config
    environment:
      - VAULT_CONFIG=/etc/vault.d/config
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${HOST_PATH}/pgdata:/var/lib/postgresql/data
      - ${HOST_PATH}/docker-compose/init.sql:/docker-entrypoint-initdb.d/init.sql
  postgres-setup:
    image: postgres:latest
    container_name: postgres-setup
    depends_on:
      postgres:
        condition: service_started
    volumes:
      - ${HOST_PATH}/docker-compose:/scripts
    entrypoint: >
      bash -c "until pg_isready -h postgres -p 5432; do sleep 1; done; sh /scripts/setup_postgres.sh"
  vault-setup:
    image: panchalravi/vault-cli:latest
    container_name: vault-setup
    depends_on:
      vault:
        condition: service_started
      postgres-setup:
        condition: service_completed_successfully
    volumes:
      - ${HOST_PATH}:/scripts:rw
    entrypoint: >
      sh -c "/scripts/setup_vault.sh"
  vault-agent:
    image: panchalravi/vault-cli:latest
    container_name: vault-agent
    ports:
      - "8100:8100"
    healthcheck:
      test: ["CMD-SHELL", "test -e /app/secrets/secrets.json"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      vault-setup:
        condition: service_completed_successfully
    volumes:
      - ${HOST_PATH}:/scripts:ro
      - app-creds:/app/secrets:rw
    entrypoint: >
      sh -c "/scripts/setup_vaultagent.sh"
  hashicups:
    image: shriramrajaraman/hashicups-python:linux1
    container_name: hashicups
    ports:
      - "5000:5000"
    environment:
      DB_HOST: postgres
      VAULT_ADDR: http://vault-agent:8100
    volumes:
      - app-creds:/etc/vault-agent:ro
    depends_on:
      vault-agent:
        condition: service_healthy

volumes:
  app-creds:
    driver: local
  pgdata:
    driver: local
  
